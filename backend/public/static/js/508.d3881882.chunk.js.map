{"version":3,"file":"static/js/508.d3881882.chunk.js","mappings":"uPAiBA,MAsFA,EAtFiBA,KACf,MAAMC,GAAOC,EAAAA,EAAAA,YAAWC,EAAAA,IAClB,UAACC,EAAS,MAAEC,EAAK,YAAEC,EAAW,WAAEC,IAAcC,EAAAA,EAAAA,MAC7CC,EAAWC,IAAgBC,EAAAA,EAAAA,GAC/B,CACCC,MAAO,CACLC,MAAO,GACPC,SAAS,GAEXC,YAAa,CACXF,MAAO,GACPC,SAAS,GAEXE,QAAS,CACPH,MAAO,GACPC,SAAS,GAEXG,MAAO,CACLJ,MAAO,KACPC,SAAS,KAGb,GAGII,GAAUC,EAAAA,EAAAA,MAsBhB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,SAAc,CAAAC,SAAA,EACbC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACnB,MAAOA,EAAOoB,QAASlB,KACnCa,EAAAA,EAAAA,MAAA,QAAMM,UAAU,aAAaC,SAvBNC,UACvBC,EAAMC,iBACN,IACE,MAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,QAASxB,EAAUyB,OAAOtB,MAAMC,OAChDkB,EAASE,OAAO,cAAexB,EAAUyB,OAAOnB,YAAYF,OAC5DkB,EAASE,OAAO,UAAWxB,EAAUyB,OAAOlB,QAAQH,OACpDkB,EAASE,OAAO,QAASxB,EAAUyB,OAAOjB,MAAMJ,aAC1CP,EAAY6B,yDAChB,OACAJ,EACA,CACEK,cAAe,UAAYnC,EAAKoC,QAGpCnB,EAAQoB,KAAK,IACf,CAAE,MAAOC,GAAM,GAO2CjB,SAAA,CACvDlB,IAAamB,EAAAA,EAAAA,KAACiB,EAAAA,EAAc,CAACC,WAAS,KACvClB,EAAAA,EAAAA,KAACmB,EAAAA,EAAK,CACFC,GAAG,QACHC,QAAQ,QACRC,KAAK,OACLC,MAAM,QACNC,WAAY,EAACC,EAAAA,EAAAA,OACbC,UAAU,8BACVC,QAASxC,KAEba,EAAAA,EAAAA,KAACmB,EAAAA,EAAK,CACFC,GAAG,cACHC,QAAQ,WACRE,MAAM,cACNC,WAAY,EAACI,EAAAA,EAAAA,IAAoB,IACjCF,UAAU,4DACVC,QAASxC,KAEba,EAAAA,EAAAA,KAACmB,EAAAA,EAAK,CACFC,GAAG,UACHC,QAAQ,QACRE,MAAM,UACNC,WAAY,EAACC,EAAAA,EAAAA,OACbC,UAAU,gCACVC,QAASxC,KAEba,EAAAA,EAAAA,KAAC6B,EAAAA,EAAW,CAACT,GAAG,QAAQO,QAASxC,EAAcuC,UAAU,8BACzD1B,EAAAA,EAAAA,KAAC8B,EAAAA,EAAM,CAACR,KAAK,SAASS,UAAW7C,EAAUK,QAAQQ,SAAC,mBAIvC,C","sources":["places/pages/NewPlace.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './PlaceForm.css';\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n  const [formState, inputHandler] = useForm(\n     {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      },\n      address: {\n        value: '',\n        isValid: false\n      },\n      image: {\n        value: null,\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const history = useHistory();\n\n  const placeSubmitHandler = async event => {\n      event.preventDefault();\n      try {\n        const formData = new FormData();\n        formData.append('title', formState.inputs.title.value);\n        formData.append('description', formState.inputs.description.value);\n        formData.append('address', formState.inputs.address.value);\n        formData.append('image', formState.inputs.image.value);\n        await sendRequest(process.env.REACT_APP_BACKEND_URL + '/places', \n          'POST',\n          formData,\n          {\n            Authorization: 'Bearer ' + auth.token\n          }\n        );\n        history.push('/')\n      } catch (err) {}\n      \n  }\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay/>}\n        <Input\n            id=\"title\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Title\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid title.\"\n            onInput={inputHandler}\n        />\n        <Input\n            id=\"description\"\n            element=\"textarea\"\n            label=\"Description\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter a valid description (at least 5 characters).\"\n            onInput={inputHandler}\n        />\n        <Input\n            id=\"address\"\n            element=\"input\"\n            label=\"Address\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid address.\"\n            onInput={inputHandler}\n        />\n        <ImageUpload id=\"image\" onInput={inputHandler} errorText=\"Please provide an image!\" />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n            ADD PLACE\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewPlace;\n"],"names":["NewPlace","auth","useContext","AuthContext","isLoading","error","sendRequest","clearError","useHttpClient","formState","inputHandler","useForm","title","value","isValid","description","address","image","history","useHistory","_jsxs","React","children","_jsx","ErrorModal","onClear","className","onSubmit","async","event","preventDefault","formData","FormData","append","inputs","process","Authorization","token","push","err","LoadingSpinner","asOverlay","Input","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_MINLENGTH","ImageUpload","Button","disabled"],"sourceRoot":""}